#!/bin/bash -x

. /etc/openstackquickstartrc

. /usr/lib/openstack-quickstart/functions.sh

echo "Setting up OpenStack demo extra node..."

install_packages patterns-OpenStack-compute-node

setup_node_for_nova_compute
disable_firewall_and_enable_forwarding

# configure bridge
if [ ! -e /etc/sysconfig/network/ifcfg-br0 ] ; then
    sed -i -e "s/\(BOOTPROTO\).*/\1='static'/"     \
        -e "s|^\(IPADDR\).*|\1='0.0.0.0\\/32'|" /etc/sysconfig/network/ifcfg-eth0
    cat >/etc/sysconfig/network/ifcfg-br0 <<EOF
BOOTPROTO='dhcp4'
BRIDGE='yes'
BRIDGE_FORWARDDELAY='0'
BRIDGE_PORTS='eth0'
BRIDGE_STP='off'
BROADCAST=''
ETHTOOL_OPTIONS=''
IPADDR=''
MTU=''
NETMASK=''
NETWORK=''
REMOTE_IPADDR=''
STARTMODE='onboot'
USERCONTROL='no'
EOF
    rcnetwork stop
    ifdown eth0 # because systemd ignores the above
    rcnetwork start || :
fi

ownip=`ip addr show dev br0 | perl -ne 'm/inet (\d+\.\d+\.\d+\.\d+)/ && print $1'`
# configure nova
sed -i -e "s;127.0.0.1;$IP;" /etc/nova/api-paste.ini /etc/glance/glance-api.conf /etc/glance/glance-registry.conf /etc/bash.openstackrc
perl -i.bak -pe "s/root:<mysql-password>/nova:$mpw/; s/<IP>/$IP/g; s/(--network_manager).*/\$1=nova.network.manager.FlatDHCPManager/;" /etc/nova/nova.conf
if [ "$DB" = "postgresql" ] ; then
	perl -i -pe 's/--sql_connection=\w+/--sql_connection=postgresql/' /etc/nova/nova.conf
fi

setup_messaging_client /etc/nova/nova.conf

# all broken?
echo '--flat_network_bridge=br0' >> /etc/nova/nova.conf
echo "--image_service=nova.image.glance.GlanceImageService" >> /etc/nova/nova.conf
echo "--glance_api_servers=$IP:9292" >> /etc/nova/nova.conf
echo "--novncproxy_base_url=http://$IP:6080/vnc_auto.html" >> /etc/nova/nova.conf
echo "--vncserver_listen=$ownip" >> /etc/nova/nova.conf
echo "--vncserver_proxyclient_address=$ownip" >> /etc/nova/nova.conf

for m in cinder heat nova glance neutron ; do
    sed -i -e 's/%SERVICE_TENANT_NAME%/service/' \
           -e "s/%SERVICE_USER%/$m/" \
           -e "s/%SERVICE_PASSWORD%/$ADMIN_PASSWORD/" \
               /etc/$m/*.ini /etc/$m/$m*.conf
done


# configure NTP, because we need synchronized time between nodes
grep -q ntp.org /etc/ntp.conf || echo server pool.ntp.org >> /etc/ntp.conf

# start services
for s in ntp iscsitarget open-iscsi tgtd openstack-nova-compute
do
    start_and_enable_service $i
done

grep -q bash.openstackrc /etc/bash.bashrc.local ||\
echo "export HOST_IP=$IP
. /etc/bash.openstackrc 
setcreds admin $pw" >> /etc/bash.bashrc.local

