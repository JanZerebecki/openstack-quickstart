#!/bin/bash -x

. /etc/openstackquickstartrc

. /usr/lib/openstack-quickstart/functions.sh

echo "Setting up OpenStack demo extra node..."

install_packages patterns-OpenStack-compute-node

setup_node_for_nova_compute
disable_firewall_and_enable_forwarding

# configure bridge
if [ ! -e /etc/sysconfig/network/ifcfg-$br ] ; then
    sed -i -e "s/\(BOOTPROTO\).*/\1='static'/"     \
        -e "s|^\(IPADDR\).*|\1='0.0.0.0\\/32'|" /etc/sysconfig/network/ifcfg-eth0
    cat >/etc/sysconfig/network/ifcfg-$br <<EOF
BOOTPROTO='dhcp4'
BRIDGE='yes'
BRIDGE_FORWARDDELAY='0'
BRIDGE_PORTS='eth0'
BRIDGE_STP='off'
BROADCAST=''
ETHTOOL_OPTIONS=''
IPADDR=''
MTU=''
NETMASK=''
NETWORK=''
REMOTE_IPADDR=''
STARTMODE='onboot'
USERCONTROL='no'
EOF
    rcnetwork stop
    ifdown eth0 # because systemd ignores the above
    rcnetwork start || :
fi

ownip=`ip addr show dev $br | perl -ne 'm/inet (\d+\.\d+\.\d+\.\d+)/ && print $1'`
sed -i -e "s;127.0.0.1;$IP;" /etc/bash.openstackrc

setup_messaging_client /etc/nova/nova.conf
setup_keystone_authtoken /etc/nova/nova.conf

crudini --set /etc/nova/nova.conf neutron url http://$IP:9696/
crudini --set /etc/nova/nova.conf DEFAULT my_ip $ownip
crudini --set /etc/nova/nova.conf DEFAULT host $ownip
crudini --set /etc/nova/nova.conf DEFAULT glance_api_servers $IP:9292
crudini --set /etc/nova/nova.conf DEFAULT novncproxy_base_url http://$IP:6080/vnc_auto.html
crudini --set /etc/nova/nova.conf DEFAULT vncserver_listen "0.0.0.0"
crudini --set /etc/nova/nova.conf DEFAULT vncserver_proxyclient_address $ownip

for m in cinder heat nova glance neutron ; do
    sed -i -e 's/%SERVICE_TENANT_NAME%/service/' \
           -e "s/%SERVICE_USER%/$m/" \
           -e "s/%SERVICE_PASSWORD%/$ADMIN_PASSWORD/" \
               /etc/$m/*.ini /etc/$m/$m*.conf
done

# configure NTP, because we need synchronized time between nodes
grep -q ntp.org /etc/ntp.conf || echo server pool.ntp.org >> /etc/ntp.conf

# start services
for s in ntp iscsitarget open-iscsi tgtd openstack-nova-compute
do
    start_and_enable_service $s
done

grep -q bash.openstackrc /etc/bash.bashrc.local ||\
echo "export HOST_IP=$IP
. /etc/bash.openstackrc 
setcreds admin $pw" >> /etc/bash.bashrc.local
